#!/system/bin/sh
#
# Compcache manager
# shade@chemlab.org (cyanogen)
# Adapted from systemd scripts at https://github.com/mystilleef/FedoraZram
# Ketut P. Kumajaya, Sept 2013

# NUM_CPUS=$(grep -c processor /proc/cpuinfo)

if [ -e /data/property/persist.service.zram.core ]; then
  NUM_CPUS=`getprop persist.service.zram.core`
else
  NUM_CPUS=1
  setprop persist.service.zram.core $NUM_CPUS
fi

# if something goes wrong, assume we have 1 or 2
[ $NUM_CPUS -lt 1 ] && NUM_CPUS=1
[ $NUM_CPUS -gt 2 ] && NUM_CPUS=2
LAST_CPU=$(($NUM_CPUS - 1))

case "$1" in
   start)
      MEM_BY_CPU=$(($2 * 1024 / $NUM_CPUS))
      echo 3 > /proc/sys/vm/drop_caches
      echo 30 > /proc/sys/vm/swappiness
      # kernels 3.4 onwards
      if ! insmod /system/lib/modules/zram.ko num_devices=$NUM_CPUS; then
        # kernels 3.1 - 3.3
        insmod /system/lib/modules/zram.ko zram_num_devices=$NUM_CPUS
      fi
      for i in $(seq 0 $LAST_CPU); do
        echo $MEM_BY_CPU > /sys/block/zram$i/disksize
        mkswap /dev/block/zram$i >/dev/null
        if [ $NUM_CPUS -gt 1 ]; then
          swapon -p 100 /dev/block/zram$i
        else
          swapon /dev/block/zram$i
        fi
      done
   ;;

   stop)
      for i in $(seq 0 $LAST_CPU); do
        if [ "$(grep /dev/block/zram$i /proc/swaps)" != "" ]; then
          swapoff /dev/block/zram$i >/dev/null 2>&1
          sleep 2
          echo 1 > /sys/block/zram$i/reset
        fi
      done
      sleep 1
      rmmod zram
   ;;
   stats)
     for i in $(seq 0 $LAST_CPU); do
       cd /sys/block/zram$i && for i in * ; do
         echo -n "$i:"
         cat $i
       done
     done
   ;;
   *)
      echo "Usage: $0 {start <size>|stop|stats}"
      exit 1
esac

exit 0

